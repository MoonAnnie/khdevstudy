package member;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

import util.JDBCTemplate;

public class MemberController {
	
	/*
	 * <회원가입>
	 * 
	 * 아이디, 패스워드, 닉네임 전달받고
	 * 
	 * 아이디, 닉네임 검사(중복, 글자수, 특수문자)
	 * 
	 * DB에 insert
	 * 
	 * insert 성공 ? 성공했다고 알려주기 : 실패했다고 알려주기
	 */
	
	//join 메소드 만들기
	public int join() { //아래 return 이 있으니까 join 메소드의 타입을 void -> int 로 변경
		
		MemberDto dto = showJoinView();
				
		Connection conn = JDBCTemplate.getConnection(); //getConnection 은 JDBCTemplate 클래스에 존재
		
		//커넥션 이용해서 SQL 실행
		String sql = "INSERT INTO MEMBER(ID, PWD, NICK, ENROLL_DATE, QUIT_YN) VALUES(?,?,?,SYSDATE,'N')";
		
		int result = 0;
		
		try {
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, dto.getId());
			pstmt.setString(2, dto.getPwd());
			pstmt.setString(3, dto.getNick());
			
			result = pstmt.executeUpdate(); //실행 결과가 숫자 타입으로 나오는거는 무조건 Update로 하면 됨
						
					 
			
		} catch (SQLException e) {
			System.out.println("회원가입 중 예외 발생 !");
			e.printStackTrace();
		}
		
		return result; //try 블럭 안에 있으면 에러 발생 시 return 안 하고 catch 로 넘어가니까 여기 아래로 옮김
	}

	private MemberDto showJoinView() { //아래 return 이 있으니까 void -> MemberDto 로 바꿈
		
		Scanner sc = new Scanner(System.in);
		
		System.out.print("아이디 : ");
		String id = sc.nextLine();
		System.out.print("비밀번호 : ");
		String pwd = sc.nextLine();
		System.out.print("닉네임 : ");
		String nick = sc.nextLine();
		
		MemberDto dto = new MemberDto(); //id, pwd, nickname 을 하나씩 전달하기 번거로우니까 객체 하나로 뭉쳐서 보내기 위함
		dto.setId(id);
		dto.setPwd(pwd);
		dto.setNick(nick);
		
		return dto;


	}//showJoinView

	public void login() {
		// TODO Auto-generated method stub
		
	}

	public void edit() {
		// TODO Auto-generated method stub
		
	}

}//class
